컬렉션 프레임워크란?
다수의 데이터를 쉽고 효과적으로 처리할 수 있는 
표준화된 방법을 제공하는 클래스의 집합을 의미한다.
컬렉션 프레임워크는 자바의 인터페이스를 사용하여 구현된다.
데이터를 저장하는 자료구조와 데이터를 처리하는 알고리즘을 구조화하여 클래스로 구현해 놓은 것


List 컬렉션
객체를 이렬로 늘어놓은 구조를 가지고 있다. 
객체를 인덱스로 관리하기 때문에 객체를 저장하면 자동 인덱스가
부여되고 인덱스로 객체를 검색, 삭제할 수 있는 기능을 제공한다.
객체 자체를 저장하는 것이 아니라 객체의 번지를 참조한다.

boolean add(E element)           주어진 객체를 맨 끝에 추가합니다.
void add(int index, E element)   주어진 인덱스에 객체를 추가합니다.
set(int index, E element)           주어진 인덱스에 저장딘 객체를 주어진 객체로 바꿉니다.
boolean contains(Object o)       주어진 객체가 있는지에 대한 여부를 검색합니다.
E get(int index)                       주어진 인덱스에 저장된 객체를 리턴합니다.
isEmpty()                               컬렉션이 비어있는지 여부를 확인합니다.
int size()                                저장되어 있는 전체 객체 수를 리턴합니다.
E remove(int index)                 주어진 인덱스에 저장된 객체를 삭제합니다.
void clear()                            주어진 인덱스에 저장된 객체를 삭제합니다.
boolean remove(Object o)        주어진 객체를 삭제합니다.

Set 컬렉션
저장 순서가 유지되지 않는다. 
객체를 중복해서 저장할 수 없다. null값도 하나만 저장할 수 있다. 

boolean add(E element)           주어진 객체를 저장 후 성공적이면 true를 중복 객체면 false를 리턴합니다.
boolean contains(Object o)       주어진 객체가 저장되어있는지 여부를 리턴합니다.
Iterator<E> iteraator()              저장된 객체를 한번씩 가져오는 반복자를 리턴합니다.
isEmpty()                               컬렉션이 비어있는지 조사합니다.
int Size()                               저장되어 있는 전체 객체수를 리턴합니다.
void clear()                            저장된 모든 객체를 삭제합니다.
boolean remove(Object o)        주어진 객체를 삭제합니다.

Map 컬렉션
키와 값으로 구성된 객체를 저장하는 구조를 가지고 있는 자료구조이다.
키는 중복으로 저장불가능하고 값은 중복으로 저장할 수 있으며 중복된 키값이 들어온다면
기존의 값은 없어지고 새로운 값으로 대치된다.
Map은 Key와 Value라는 것은 한 쌍으로 갖는 자료형이다.
순차적으로 해당 요소 값을 구하지 않고 key를 통해 value를 얻는다.

V put(K key, V value)                     주어진 키와 값을 추가하여 저장되면 값을 리턴합니다.
boolean containsKey(Object Key)      주어진 키가 있는지 확인합니다.
boolean containsValue(Object value) 주어진 값이 있는지 확인합니다.
Set<Map.Entry<K, V>> entrySet()     모든 Map.Entry 객체를 Set에 담아 리턴합니다.
Set<K> keySet()                            모든 키를 Set객체에 담아서 리턴합니다.
V get(Object key)                          주어진 키에 잇는 값을 리턴합니다.
boolean isEmpty()                         컬렉션이 비어있는지 조사합니다.
int Size()                                     저장되어 있는 전제 객체의 수를 리턴합니다.
Collection<V> values()                   저장된 모든값을 Collection에 담아서 리턴합니다.
void clear()                                  저장된 모든 Map.Entry를 삭제합니다.
V remove(Object Key)                    주어진 키와 일치하는 Map.Entry를 삭제하고 값을 리턴합니다.
